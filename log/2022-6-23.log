[2022-06-23  09:44:15] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-23  09:44:15] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-23  09:44:15] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-23  09:44:17] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-23  09:44:17] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-23  09:44:17] parameter_setting.py -> parameter_setting line:52 [ERROR] : 依赖参数出现问题，依赖表达式$.bill_no，参数池{}
[2022-06-23  09:44:17] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': '$.bill_no'}
[2022-06-23  09:44:19] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-23  09:44:19] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-23  09:44:19] parameter_setting.py -> parameter_setting line:52 [ERROR] : 依赖参数出现问题，依赖表达式$.affirm_name，参数池{}
[2022-06-23  09:44:19] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}
[2022-06-23  09:46:18] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-23  09:46:18] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-23  09:46:18] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-23  09:46:18] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-23  09:46:18] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-23  09:46:18] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  09:46:18] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-23  09:46:18] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  09:46:18] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-23  09:46:18] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-23  09:46:18] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-23  09:46:18] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  09:46:18] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-23  09:46:18] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-23  09:46:18] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-23  09:46:18] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:46:18] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-23  09:46:18] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  09:46:18] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-23  09:46:18] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-23  09:46:18] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-23  09:46:18] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:46:18] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:46:18] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:46:18] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  09:46:18] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-23  09:46:18] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-23  09:46:18] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-23  09:46:18] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True, True]
[2022-06-23  09:46:18] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-23  09:47:14] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-23  09:47:14] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-23  09:47:14] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-23  09:47:14] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-23  09:47:14] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-23  09:47:14] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  09:47:14] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-23  09:47:14] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  09:47:14] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-23  09:47:14] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-23  09:47:14] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-23  09:47:14] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  09:47:14] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-23  09:47:14] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-23  09:47:14] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-23  09:47:14] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:47:14] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-23  09:47:14] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  09:47:14] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-23  09:47:14] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-23  09:47:14] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-23  09:47:14] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:47:14] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:47:14] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  09:47:14] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  09:47:14] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-23  09:47:14] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-23  09:47:14] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-23  09:47:14] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True, True]
[2022-06-23  09:47:14] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-23  11:51:29] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-23  11:51:29] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-23  11:51:29] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-23  11:51:29] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-23  11:51:29] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-23  11:51:29] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  11:51:29] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-23  11:51:29] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  11:51:29] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-23  11:51:29] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-23  11:51:29] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-23  11:51:29] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  11:51:29] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-23  11:51:29] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-23  11:51:29] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-23  11:51:29] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  11:51:29] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-23  11:51:29] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  11:51:29] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-23  11:51:29] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-23  11:51:29] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-23  11:51:29] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  11:51:29] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  11:51:29] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-23  11:51:29] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-23  11:51:29] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-23  11:51:29] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-23  11:51:29] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-23  11:51:29] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True, True]
[2022-06-23  11:51:29] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-23  11:51:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-23  11:51:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-23  11:51:58] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-23  11:51:58] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-23  11:51:58] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-23  11:51:58] parameter_setting.py -> parameter_setting line:45 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-23  11:51:58] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-23  11:51:58] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  11:51:58] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-23  11:51:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-23  11:51:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-23  11:51:58] parameter_setting.py -> parameter_setting line:54 [INFO] : 读取前的参数池{'waybill_no': 'lj520'}
[2022-06-23  11:54:44] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-23  11:54:44] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-23  11:54:44] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-23  11:54:44] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-23  11:54:44] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-23  11:54:44] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-23  11:54:44] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-23  11:54:44] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  11:54:44] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-23  11:54:44] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-23  11:54:44] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-23  11:54:44] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'waybill_no': 'lj520'}
[2022-06-23  11:54:44] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-23 11:54:44', 'str': 'imlygd', 'int': 91891}
[2022-06-23  11:54:44] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-23  11:54:44] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-23  11:54:44] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-23  11:54:44] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  11:54:44] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-23  15:05:32] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-23  15:05:32] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-23  15:05:32] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-23  15:05:32] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-23  15:05:32] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-23  15:05:32] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-23  15:05:32] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-23  15:05:32] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  15:05:32] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-23  15:05:32] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-23  15:05:32] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-23  15:05:32] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'waybill_no': 'lj520'}
[2022-06-23  15:05:32] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-23 15:05:32', 'str': 'svbajs', 'int': 13748}
[2022-06-23  15:05:32] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-23  15:05:32] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-23  15:05:32] assert_.py -> assert_response line:32 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-23  15:05:32] assert_.py -> assert_response line:40 [INFO] : 断言结果列表:[True]
[2022-06-23  15:05:32] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
