[2022-06-27  14:36:07] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  14:36:34] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'用例标题': {'path': '/test', 'method': 'get', 'remark': '这个是使用模板', 'is_run': False, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'id': '$.tq_data.id', 'projectNo': '320SF000206004', 'name': '$.tq_data.name', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)', 'sql': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'id': '$.id', 'name': '$.name'}, 'assert_expression': ["'12' in '123'", '"ig" == "$.ig"', '1==sql-SELECT title FROM case_test where id=2']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '删除账单': {'path': '/bill/deleteBillCommon', 'method': 'post', 'remark': '删除账单啊需要id', 'is_run': True, 'data': {'id': '$.id'}, 'extract_key': None, 'assert_expression': ['"成功1 "=="$.msg"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  14:37:28] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'用例标题': {'path': '/test', 'method': 'get', 'remark': '这个是使用模板', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'id': '$.tq_data.id', 'projectNo': '320SF000206004', 'name': '$.tq_data.name', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)', 'sql': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'id': '$.id', 'name': '$.name'}, 'assert_expression': ["'12' in '123'", '"ig" == "$.ig"', '1==sql-SELECT title FROM case_test where id=2']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '删除账单': {'path': '/bill/deleteBillCommon', 'method': 'post', 'remark': '删除账单啊需要id', 'is_run': True, 'data': {'id': '$.id'}, 'extract_key': None, 'assert_expression': ['"成功1 "=="$.msg"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  14:38:30] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'用例标题': {'path': '/test', 'method': 'get', 'remark': '这个是使用模板', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'id': '$.tq_data.id', 'projectNo': '320SF000206004', 'name': '$.tq_data.name', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)', 'sql': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'id': '$.id', 'name': '$.name'}, 'assert_expression': ["'12' in '123'", '"ig" == "$.ig"', '1=="sql-SELECT title FROM case_test where id=2"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '删除账单': {'path': '/bill/deleteBillCommon', 'method': 'post', 'remark': '删除账单啊需要id', 'is_run': True, 'data': {'id': '$.id'}, 'extract_key': None, 'assert_expression': ['"成功1 "=="$.msg"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:17:18] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:17:59] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:17:59] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  15:17:59] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  15:17:59] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  15:20:42] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:31:58] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:32:59] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:39:21] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:39:22] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  15:39:22] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  15:39:22] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  15:41:56] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:43:03] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:44:01] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:44:14] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:44:37] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:46:45] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:47:18] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:48:35] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:52:41] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:52:41] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  15:52:41] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-27  15:52:41] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-27  15:52:44] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  15:52:44] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  15:52:44] parameter_setting.py -> parameter_setting line:51 [ERROR] : 依赖参数出现问题，依赖表达式$.bill_no，参数池{}
[2022-06-27  15:52:44] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': '$.bill_no'}
[2022-06-27  15:52:46] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  15:52:46] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  15:52:46] parameter_setting.py -> parameter_setting line:51 [ERROR] : 依赖参数出现问题，依赖表达式$.affirm_name，参数池{}
[2022-06-27  15:52:46] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}
[2022-06-27  15:52:48] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  15:52:48] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  15:52:48] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  15:52:50] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-27  15:52:50] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-27  15:52:50] parameter_setting.py -> parameter_setting line:51 [ERROR] : 依赖参数出现问题，依赖表达式$.waybill_no，参数池{}
[2022-06-27  15:52:50] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}
[2022-06-27  15:53:06] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:53:06] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  15:53:06] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-27  15:53:06] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-27  15:53:08] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  15:53:08] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  15:53:08] parameter_setting.py -> parameter_setting line:51 [ERROR] : 依赖参数出现问题，依赖表达式$.bill_no，参数池{}
[2022-06-27  15:53:08] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': '$.bill_no'}
[2022-06-27  15:53:10] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  15:53:10] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  15:53:10] parameter_setting.py -> parameter_setting line:51 [ERROR] : 依赖参数出现问题，依赖表达式$.affirm_name，参数池{}
[2022-06-27  15:53:10] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}
[2022-06-27  15:53:12] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  15:53:12] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  15:53:12] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  15:53:15] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-27  15:53:15] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-27  15:53:15] parameter_setting.py -> parameter_setting line:51 [ERROR] : 依赖参数出现问题，依赖表达式$.waybill_no，参数池{}
[2022-06-27  15:53:15] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}
[2022-06-27  15:54:21] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  15:54:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-27  15:54:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-27  15:54:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-27  15:54:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  15:54:21] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-27  15:54:21] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-27  15:54:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  15:54:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-27  15:54:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  15:54:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  15:54:21] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-27  15:54:21] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-27  15:54:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  15:54:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  15:54:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  15:54:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  15:54:21] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-27  15:54:21] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-27  15:54:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  15:54:21] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  15:54:21] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  15:54:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  15:54:21] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  15:54:21] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  15:54:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-27  15:54:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  15:54:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-27 15:54:21', 'str': 'dtahxw', 'int': 67687}
[2022-06-27  15:54:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-27  15:54:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  15:54:21] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-27  15:54:21] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  15:54:21] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-27  16:16:58] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  16:16:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-27  16:16:58] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-27  16:16:58] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-27  16:16:58] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:16:58] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-27  16:16:58] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-27  16:16:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:16:58] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-27  16:16:58] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:16:58] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:16:58] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-27  16:16:58] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-27  16:16:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:16:58] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:16:58] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:16:58] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:16:58] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-27  16:16:58] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-27  16:16:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:16:58] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:16:58] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:16:58] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:16:58] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:16:58] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:16:58] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-27  16:16:58] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:16:58] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-27 16:16:58', 'str': 'flgjhc', 'int': 32994}
[2022-06-27  16:16:58] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-27  16:16:58] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:16:58] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-27  16:16:58] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:16:58] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-27  16:21:57] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  16:21:57] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:21:57] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:21:57] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:21:57] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:21:57] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:21:57] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-27  16:21:57] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:21:57] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:21:57] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:24:10] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  16:24:10] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-27  16:24:10] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-27  16:24:10] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-27  16:24:10] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:24:10] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-27  16:24:10] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-27  16:24:10] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:24:10] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-27  16:24:10] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:24:10] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:24:10] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-27  16:24:10] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-27  16:24:10] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:24:10] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:24:10] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:24:10] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:24:10] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-27  16:24:10] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-27  16:24:10] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:24:10] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:24:10] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:24:10] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:24:10] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:24:10] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:24:10] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-27  16:24:10] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:24:10] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-27 16:24:10', 'str': 'mvqrnw', 'int': 37995}
[2022-06-27  16:24:10] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-27  16:24:10] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:24:10] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-27  16:24:10] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:24:10] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-27  16:40:14] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  16:40:14] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:40:14] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:40:14] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:40:14] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:40:14] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:40:14] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-27  16:40:14] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:40:14] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:40:14] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:40:57] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  16:47:53] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:47:57] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:48:13] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:48:14] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:48:17] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:48:26] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-27  16:48:37] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:48:39] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:48:41] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:55:02] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}}
[2022-06-27  16:55:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"'], 'case_title': '创建账单'}
[2022-06-27  16:55:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}
[2022-06-27  16:55:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-27  16:55:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:55:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"', '1=="sql-SELECT title FROM case_test where id=2"']
[2022-06-27  16:55:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, False]
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-27  16:55:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:55:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-27  16:55:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:55:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:55:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-27  16:55:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-27  16:55:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:55:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:55:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:55:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:55:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-27  16:55:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-27  16:55:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:55:02] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:55:02] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:55:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:55:02] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:55:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:55:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:55:02] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:55:32] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}}
[2022-06-27  16:55:32] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:55:32] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:55:32] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:55:32] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:55:32] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:55:32] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'waybill_no': 'lj520'}
[2022-06-27  16:55:32] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:55:32] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:55:32] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:57:02] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-27  16:57:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-27  16:57:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江'}
[2022-06-27  16:57:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-27  16:57:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:57:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-27  16:57:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-27  16:57:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:57:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-27  16:57:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:57:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:57:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-27  16:57:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-27  16:57:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-27  16:57:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-27  16:57:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-27  16:57:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:57:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-27  16:57:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-27  16:57:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-27  16:57:02] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-27  16:57:02] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-27  16:57:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:57:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-27  16:57:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-27  16:57:02] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-27  16:57:02] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-27  16:57:02] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-27 16:57:02', 'str': 'siwfzu', 'int': 42284}
[2022-06-27  16:57:02] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-27  16:57:02] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-27  16:57:02] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-27  16:57:02] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-27  16:57:02] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
