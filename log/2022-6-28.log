[2022-06-28  09:28:47] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:29:46] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:30:10] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:30:36] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:32:19] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:33:32] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:36:44] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:37:50] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:37:50] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', '创建账单': '标题2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-28  09:37:50] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', '创建账单': '标题2'}
[2022-06-28  09:37:50] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-28  09:37:50] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  09:37:50] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-28  09:37:50] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-28  09:37:50] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  09:37:50] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-28  09:37:50] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  09:37:50] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:37:50] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-28  09:37:50] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-28  09:37:50] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:37:50] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  09:37:50] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  09:37:50] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  09:37:50] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-28  09:37:50] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-28  09:37:50] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-28  09:37:50] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-28  09:37:50] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-28  09:37:50] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  09:37:50] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-28  09:37:50] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-28  09:37:50] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-28  09:37:50] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  09:37:50] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-28 09:37:50', 'str': 'hgrplb', 'int': 56724}
[2022-06-28  09:37:50] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-28  09:37:50] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  09:37:50] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-28  09:37:50] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:37:50] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-28  09:40:05] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:53:11] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', 'sql_test1': 'sql-SELECT title FROM case_test where id=3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  09:53:11] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"'], 'case_title': '创建账单'}
[2022-06-28  09:53:11] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}
[2022-06-28  09:53:11] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-28  09:53:11] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-28  09:53:11] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  09:53:11] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"']
[2022-06-28  09:53:11] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-28  09:53:11] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-28  09:53:11] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  09:53:11] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-28  09:53:11] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  09:53:11] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-28  09:53:11] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:53:11] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-28  09:53:11] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-28  09:53:11] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-28  09:53:11] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:53:11] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:53:11] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  09:53:11] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  09:53:11] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  09:53:11] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  09:53:11] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-28  09:53:11] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-28  09:53:11] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-28  09:53:11] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-28  09:53:11] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-28  09:53:12] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-28  09:53:12] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-28  09:53:12] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  09:53:12] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-28  09:53:12] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:53:12] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-28  09:53:12] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-28  09:53:12] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-28  09:53:12] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  09:53:12] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-28 09:53:12', 'str': 'edweys', 'int': 96629}
[2022-06-28  09:53:12] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-28  09:53:12] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  09:53:12] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-28  09:53:12] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  09:53:12] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-28  10:10:34] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', 'sql_test1': 'sql-SELECT title FROM case_test where id=3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  10:10:34] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-28  10:10:34] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"'], 'case_title': '创建账单'}
[2022-06-28  10:10:34] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}
[2022-06-28  10:10:35] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-28  10:10:35] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:10:35] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:10:35] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-28  10:10:35] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:10:35] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:10:35] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-28  10:10:35] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-28  10:10:35] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:10:35] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:10:35] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:10:35] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:10:35] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-28  10:10:35] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True, True]
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-28  10:10:35] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-28  10:10:35] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-28  10:10:35] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-28  10:10:35] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:10:35] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-28  10:10:35] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-28  10:10:35] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-28  10:10:35] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:10:35] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-28 10:10:35', 'str': 'mudgpl', 'int': 86672}
[2022-06-28  10:10:35] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-28  10:10:35] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:10:35] assert_.py -> assert_response line:36 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-28  10:10:35] assert_.py -> assert_response line:44 [INFO] : 断言结果列表:[True]
[2022-06-28  10:10:35] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-28  10:31:00] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', 'sql_test1': 'sql-SELECT title FROM case_test where id=3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  10:31:00] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=2"'], 'case_title': '创建账单'}
[2022-06-28  10:31:00] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}
[2022-06-28  10:31:00] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-28  10:31:00] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:31:00] assert_.py -> assert_response line:41 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"', '1=="sql-标题2"']
[2022-06-28  10:31:00] assert_.py -> assert_response line:49 [INFO] : 断言结果列表:[True, False]
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-28  10:31:00] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:31:00] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-28  10:31:00] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:31:00] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:31:00] assert_.py -> assert_response line:41 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-28  10:31:00] assert_.py -> assert_response line:49 [INFO] : 断言结果列表:[True]
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-28  10:31:00] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:31:00] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:31:00] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:31:00] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:31:00] assert_.py -> assert_response line:41 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-28  10:31:00] assert_.py -> assert_response line:49 [INFO] : 断言结果列表:[True, True]
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-28  10:31:00] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-28  10:31:00] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-28  10:31:00] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-28  10:31:00] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:31:00] assert_.py -> assert_response line:41 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-28  10:31:00] assert_.py -> assert_response line:49 [INFO] : 断言结果列表:[True]
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-28  10:31:00] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-28  10:31:00] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:31:00] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-28 10:31:00', 'str': 'oksnrk', 'int': 98314}
[2022-06-28  10:31:00] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-28  10:31:00] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:31:00] assert_.py -> assert_response line:41 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-28  10:31:00] assert_.py -> assert_response line:49 [INFO] : 断言结果列表:[True]
[2022-06-28  10:31:00] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-28  10:34:21] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', 'sql_test1': 'sql-SELECT title FROM case_test where id=3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=4"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  10:34:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '1=="sql-SELECT title FROM case_test where id=4"'], 'case_title': '创建账单'}
[2022-06-28  10:34:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}
[2022-06-28  10:34:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-28  10:34:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:34:21] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"', '1=="1"']
[2022-06-28  10:34:21] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True, False]
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-28  10:34:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:34:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-28  10:34:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:34:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:21] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-28  10:34:21] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True]
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-28  10:34:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:34:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:34:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:34:21] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-28  10:34:21] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True, True]
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-28  10:34:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-28  10:34:21] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-28  10:34:21] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-28  10:34:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:34:21] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-28  10:34:21] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True]
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-28  10:34:21] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-28  10:34:21] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:34:21] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-28 10:34:21', 'str': 'umviqr', 'int': 21666}
[2022-06-28  10:34:21] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-28  10:34:21] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:34:21] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-28  10:34:21] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True]
[2022-06-28  10:34:21] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
[2022-06-28  10:34:51] read_file.py -> read_case line:38 [INFO] : 最终执行的用例数据:{'创建账单': {'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': 'sql-SELECT title FROM case_test where id=2', 'sql_test1': 'sql-SELECT title FROM case_test where id=3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '"标题2"=="sql-SELECT title FROM case_test where id=2"']}, '确认账单': {'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"']}, '核销账单': {'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"']}, '获取运单号': {'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"']}, '录单': {'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"']}}
[2022-06-28  10:34:51] test_case.py -> test_main line:21 [INFO] : -----开始运行 "创建账单"用例------
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/create_bill', 'method': 'post', 'remark': '创建账单', 'is_run': True, 'precondition_sql': ["UPDATE case_test SET title = '标题2', ex = '44' WHERE id = 2", "UPDATE case_test SET title = '标题3', ex = '55' WHERE id = 3"], 'data': {'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}, 'extract_key': {'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}, 'assert_expression': ['"lj1314"=="$.bill_no"', '"标题2"=="sql-SELECT title FROM case_test where id=2"'], 'case_title': '创建账单'}
[2022-06-28  10:34:51] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/create_bill,请求参数{'create_month': '6月', 'create_name': '小江', 'sql_test': '标题2', 'sql_test1': '标题3'}
[2022-06-28  10:34:51] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/create_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_month': '6月', 'create_name': '小江'}}
[2022-06-28  10:34:51] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'bill_no': '$.bill_no', 'create_name': '$.bill_info.create_name'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:34:51] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"lj1314"=="lj1314"', '"标题2"=="标题2"']
[2022-06-28  10:34:51] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True, True]
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:52 [INFO] : -----"创建账单"用例运行完成------
[2022-06-28  10:34:51] test_case.py -> test_main line:21 [INFO] : -----开始运行 "确认账单"用例------
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/affirm_bill', 'method': 'post', 'remark': '确认账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '小江', 'bill_no': '$.bill_no'}, 'extract_key': {'affirm_name': '$.bill_info.affirm_name'}, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"'], 'case_title': '确认账单'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:34:51] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/affirm_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314'}
[2022-06-28  10:34:51] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/affirm_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:34:51] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'affirm_name': '$.bill_info.affirm_name'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:51] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"小江"=="小江"']
[2022-06-28  10:34:51] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True]
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:52 [INFO] : -----"确认账单"用例运行完成------
[2022-06-28  10:34:51] test_case.py -> test_main line:21 [INFO] : -----开始运行 "核销账单"用例------
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/write_off_bill', 'method': 'post', 'remark': '核销账单', 'is_run': True, 'precondition_sql': None, 'data': {'affirm_name': '$.affirm_name', 'bill_no': '$.bill_no', 'create_name': '$.create_name'}, 'extract_key': None, 'assert_expression': ['"小江"=="$.bill_info.affirm_name"', '"小江"=="$.bill_info.create_name"'], 'case_title': '核销账单'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江'}
[2022-06-28  10:34:51] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/write_off_bill,请求参数{'affirm_name': '小江', 'bill_no': 'lj1314', 'create_name': '小江'}
[2022-06-28  10:34:51] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/write_off_bill返回结果：{'bill_no': 'lj1314', 'bill_info': {'create_name': '小江', 'affirm_name': '小江', 'bill_no': 'lj1314'}}
[2022-06-28  10:34:51] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:34:51] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"小江"=="小江"', '"小江"=="小江"']
[2022-06-28  10:34:51] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True, True]
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:52 [INFO] : -----"核销账单"用例运行完成------
[2022-06-28  10:34:51] test_case.py -> test_main line:21 [INFO] : -----开始运行 "获取运单号"用例------
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/get_waybill_no', 'method': 'get', 'remark': '获取运单号，提取运单号', 'is_run': True, 'precondition_sql': None, 'data': None, 'extract_key': {'waybill_no': '$.waybill_no'}, 'assert_expression': ['"lj520"=="$.waybill_no"'], 'case_title': '获取运单号'}
[2022-06-28  10:34:51] request_.py -> get line:23 [INFO] : get请求的最终请求地址:http://192.168.11.177:8001/get_waybill_no
[2022-06-28  10:34:51] request_.py -> get line:25 [INFO] : http://192.168.11.177:8001/get_waybill_no返回结果：{'waybill_no': 'lj520'}
[2022-06-28  10:34:51] case_test.py -> replace_ line:17 [INFO] : 提取参数字典{'waybill_no': '$.waybill_no'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:44 [INFO] : 参数提取完成后的参数池：{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:34:51] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"lj520"=="lj520"']
[2022-06-28  10:34:51] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True]
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:52 [INFO] : -----"获取运单号"用例运行完成------
[2022-06-28  10:34:51] test_case.py -> test_main line:21 [INFO] : -----开始运行 "录单"用例------
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:31 [INFO] : 用例原始数据：{'path': '/lu_dan', 'method': 'post', 'remark': '录单，使用运单号', 'is_run': True, 'precondition_sql': None, 'data': {'waybill_no': '$.waybill_no', 'lu_dan_ren': '小江', 'time': 'random_time()', 'str': 'random_str(6)', 'int': 'random_number(5)'}, 'extract_key': None, 'assert_expression': ['"运单创建成功"=="$.msg"'], 'case_title': '录单'}
[2022-06-28  10:34:51] parameter_setting.py -> parameter_setting line:53 [INFO] : 读取前的参数池{'bill_no': 'lj1314', 'create_name': '小江', 'affirm_name': '小江', 'waybill_no': 'lj520'}
[2022-06-28  10:34:51] request_.py -> post line:33 [INFO] : post请求的最终请求地址:http://192.168.11.177:8001/lu_dan,请求参数{'waybill_no': 'lj520', 'lu_dan_ren': '小江', 'time': '2022-06-28 10:34:51', 'str': 'kvpheu', 'int': 21525}
[2022-06-28  10:34:51] request_.py -> post line:35 [INFO] : http://192.168.11.177:8001/lu_dan返回结果：{'msg': '运单创建成功', 'waybill_info': {'waybill_no': 'lj520', 'lu_dan_ren': '小江'}}
[2022-06-28  10:34:51] case_test.py -> replace_ line:17 [INFO] : 提取参数字典None
[2022-06-28  10:34:51] assert_.py -> assert_response line:42 [INFO] : 断言表达式新列表：['"运单创建成功"=="运单创建成功"']
[2022-06-28  10:34:51] assert_.py -> assert_response line:50 [INFO] : 断言结果列表:[True]
[2022-06-28  10:34:51] case_test.py -> case_assert_result line:52 [INFO] : -----"录单"用例运行完成------
